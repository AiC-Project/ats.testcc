/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Airport</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Airport#getTitle <em>Title</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Airport#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Airport#getCountry <em>Country</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Airport#getRunways <em>Runways</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getAirport()
 * @model
 * @generated
 */
public interface Airport extends EObject
{
  /**
   * Returns the value of the '<em><b>Title</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Title</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Title</em>' attribute.
   * @see #setTitle(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getAirport_Title()
   * @model
   * @generated
   */
  String getTitle();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Airport#getTitle <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Title</em>' attribute.
   * @see #getTitle()
   * @generated
   */
  void setTitle(String value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' containment reference.
   * @see #setName(CodeOACI)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getAirport_Name()
   * @model containment="true"
   * @generated
   */
  CodeOACI getName();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Airport#getName <em>Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' containment reference.
   * @see #getName()
   * @generated
   */
  void setName(CodeOACI value);

  /**
   * Returns the value of the '<em><b>Country</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Country</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Country</em>' attribute.
   * @see #setCountry(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getAirport_Country()
   * @model
   * @generated
   */
  String getCountry();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Airport#getCountry <em>Country</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Country</em>' attribute.
   * @see #getCountry()
   * @generated
   */
  void setCountry(String value);

  /**
   * Returns the value of the '<em><b>Runways</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Runways</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Runways</em>' attribute.
   * @see #setRunways(int)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getAirport_Runways()
   * @model
   * @generated
   */
  int getRunways();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Airport#getRunways <em>Runways</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Runways</em>' attribute.
   * @see #getRunways()
   * @generated
   */
  void setRunways(int value);

} // Airport
