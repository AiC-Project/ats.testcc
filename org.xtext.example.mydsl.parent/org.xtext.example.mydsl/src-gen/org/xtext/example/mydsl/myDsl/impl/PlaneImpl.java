/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.Engines;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Plane;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Plane</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PlaneImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PlaneImpl#getPassengers <em>Passengers</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PlaneImpl#getMotorisation <em>Motorisation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PlaneImpl extends MinimalEObjectImpl.Container implements Plane
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPassengers() <em>Passengers</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPassengers()
   * @generated
   * @ordered
   */
  protected static final int PASSENGERS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPassengers() <em>Passengers</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPassengers()
   * @generated
   * @ordered
   */
  protected int passengers = PASSENGERS_EDEFAULT;

  /**
   * The default value of the '{@link #getMotorisation() <em>Motorisation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMotorisation()
   * @generated
   * @ordered
   */
  protected static final Engines MOTORISATION_EDEFAULT = Engines.PROPELLER;

  /**
   * The cached value of the '{@link #getMotorisation() <em>Motorisation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMotorisation()
   * @generated
   * @ordered
   */
  protected Engines motorisation = MOTORISATION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PlaneImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PLANE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PLANE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getPassengers()
  {
    return passengers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPassengers(int newPassengers)
  {
    int oldPassengers = passengers;
    passengers = newPassengers;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PLANE__PASSENGERS, oldPassengers, passengers));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Engines getMotorisation()
  {
    return motorisation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMotorisation(Engines newMotorisation)
  {
    Engines oldMotorisation = motorisation;
    motorisation = newMotorisation == null ? MOTORISATION_EDEFAULT : newMotorisation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PLANE__MOTORISATION, oldMotorisation, motorisation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PLANE__NAME:
        return getName();
      case MyDslPackage.PLANE__PASSENGERS:
        return getPassengers();
      case MyDslPackage.PLANE__MOTORISATION:
        return getMotorisation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PLANE__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.PLANE__PASSENGERS:
        setPassengers((Integer)newValue);
        return;
      case MyDslPackage.PLANE__MOTORISATION:
        setMotorisation((Engines)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PLANE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.PLANE__PASSENGERS:
        setPassengers(PASSENGERS_EDEFAULT);
        return;
      case MyDslPackage.PLANE__MOTORISATION:
        setMotorisation(MOTORISATION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PLANE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.PLANE__PASSENGERS:
        return passengers != PASSENGERS_EDEFAULT;
      case MyDslPackage.PLANE__MOTORISATION:
        return motorisation != MOTORISATION_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", passengers: ");
    result.append(passengers);
    result.append(", motorisation: ");
    result.append(motorisation);
    result.append(')');
    return result.toString();
  }

} //PlaneImpl
