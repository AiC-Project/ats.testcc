/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Airline;
import org.xtext.example.mydsl.myDsl.Airport;
import org.xtext.example.mydsl.myDsl.Includes;
import org.xtext.example.mydsl.myDsl.Model;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Plane;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ModelImpl#getIncludes <em>Includes</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ModelImpl#getPlanes <em>Planes</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ModelImpl#getAirports <em>Airports</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ModelImpl#getAirlines <em>Airlines</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getIncludes() <em>Includes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIncludes()
   * @generated
   * @ordered
   */
  protected EList<Includes> includes;

  /**
   * The cached value of the '{@link #getPlanes() <em>Planes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlanes()
   * @generated
   * @ordered
   */
  protected EList<Plane> planes;

  /**
   * The cached value of the '{@link #getAirports() <em>Airports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAirports()
   * @generated
   * @ordered
   */
  protected EList<Airport> airports;

  /**
   * The cached value of the '{@link #getAirlines() <em>Airlines</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAirlines()
   * @generated
   * @ordered
   */
  protected EList<Airline> airlines;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Includes> getIncludes()
  {
    if (includes == null)
    {
      includes = new EObjectContainmentEList<Includes>(Includes.class, this, MyDslPackage.MODEL__INCLUDES);
    }
    return includes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Plane> getPlanes()
  {
    if (planes == null)
    {
      planes = new EObjectContainmentEList<Plane>(Plane.class, this, MyDslPackage.MODEL__PLANES);
    }
    return planes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Airport> getAirports()
  {
    if (airports == null)
    {
      airports = new EObjectContainmentEList<Airport>(Airport.class, this, MyDslPackage.MODEL__AIRPORTS);
    }
    return airports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Airline> getAirlines()
  {
    if (airlines == null)
    {
      airlines = new EObjectContainmentEList<Airline>(Airline.class, this, MyDslPackage.MODEL__AIRLINES);
    }
    return airlines;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__INCLUDES:
        return ((InternalEList<?>)getIncludes()).basicRemove(otherEnd, msgs);
      case MyDslPackage.MODEL__PLANES:
        return ((InternalEList<?>)getPlanes()).basicRemove(otherEnd, msgs);
      case MyDslPackage.MODEL__AIRPORTS:
        return ((InternalEList<?>)getAirports()).basicRemove(otherEnd, msgs);
      case MyDslPackage.MODEL__AIRLINES:
        return ((InternalEList<?>)getAirlines()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__INCLUDES:
        return getIncludes();
      case MyDslPackage.MODEL__PLANES:
        return getPlanes();
      case MyDslPackage.MODEL__AIRPORTS:
        return getAirports();
      case MyDslPackage.MODEL__AIRLINES:
        return getAirlines();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__INCLUDES:
        getIncludes().clear();
        getIncludes().addAll((Collection<? extends Includes>)newValue);
        return;
      case MyDslPackage.MODEL__PLANES:
        getPlanes().clear();
        getPlanes().addAll((Collection<? extends Plane>)newValue);
        return;
      case MyDslPackage.MODEL__AIRPORTS:
        getAirports().clear();
        getAirports().addAll((Collection<? extends Airport>)newValue);
        return;
      case MyDslPackage.MODEL__AIRLINES:
        getAirlines().clear();
        getAirlines().addAll((Collection<? extends Airline>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__INCLUDES:
        getIncludes().clear();
        return;
      case MyDslPackage.MODEL__PLANES:
        getPlanes().clear();
        return;
      case MyDslPackage.MODEL__AIRPORTS:
        getAirports().clear();
        return;
      case MyDslPackage.MODEL__AIRLINES:
        getAirlines().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__INCLUDES:
        return includes != null && !includes.isEmpty();
      case MyDslPackage.MODEL__PLANES:
        return planes != null && !planes.isEmpty();
      case MyDslPackage.MODEL__AIRPORTS:
        return airports != null && !airports.isEmpty();
      case MyDslPackage.MODEL__AIRLINES:
        return airlines != null && !airlines.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
