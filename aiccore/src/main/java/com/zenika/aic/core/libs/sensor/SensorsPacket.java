// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensors_packet.proto

package com.zenika.aic.core.libs.sensor;

public final class SensorsPacket {
  private SensorsPacket() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class sensors_packet extends
          com.google.protobuf.GeneratedMessage {
    // Use sensors_packet.newBuilder() to construct.
    private sensors_packet() {
      initFields();
    }
    private sensors_packet(boolean noInit) {}

    private static final sensors_packet defaultInstance;
    public static sensors_packet getDefaultInstance() {
      return defaultInstance;
    }

    public sensors_packet getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SensorsPacket.internal_static_sensors_packet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SensorsPacket.internal_static_sensors_packet_fieldAccessorTable;
    }

    public static final class SensorAcceleroPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorAcceleroPayload.newBuilder() to construct.
      private SensorAcceleroPayload() {
        initFields();
      }
      private SensorAcceleroPayload(boolean noInit) {}

      private static final SensorAcceleroPayload defaultInstance;
      public static SensorAcceleroPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorAcceleroPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorAcceleroPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorAcceleroPayload_fieldAccessorTable;
      }

      // optional double x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private double x_ = 0D;
      public boolean hasX() { return hasX; }
      public double getX() { return x_; }

      // optional double y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private double y_ = 0D;
      public boolean hasY() { return hasY; }
      public double getY() { return y_; }

      // optional double z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private boolean hasZ;
      private double z_ = 0D;
      public boolean hasZ() { return hasZ; }
      public double getZ() { return z_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeDouble(1, getX());
        }
        if (hasY()) {
          output.writeDouble(2, getY());
        }
        if (hasZ()) {
          output.writeDouble(3, getZ());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(2, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(3, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorAcceleroPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorAcceleroPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorAcceleroPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorAcceleroPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorAcceleroPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorAcceleroPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorAcceleroPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorAcceleroPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorAcceleroPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorAcceleroPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorAcceleroPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorAcceleroPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorAcceleroPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorAcceleroPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorAcceleroPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorAcceleroPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorAcceleroPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorAcceleroPayload.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setX(input.readDouble());
                break;
              }
              case 17: {
                setY(input.readDouble());
                break;
              }
              case 25: {
                setZ(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public double getX() {
          return result.getX();
        }
        public Builder setX(double value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0D;
          return this;
        }

        // optional double y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public double getY() {
          return result.getY();
        }
        public Builder setY(double value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0D;
          return this;
        }

        // optional double z = 3;
        public boolean hasZ() {
          return result.hasZ();
        }
        public double getZ() {
          return result.getZ();
        }
        public Builder setZ(double value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorAcceleroPayload)
      }

      static {
        defaultInstance = new SensorAcceleroPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorAcceleroPayload)
    }

    public static final class SensorMagnetoPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorMagnetoPayload.newBuilder() to construct.
      private SensorMagnetoPayload() {
        initFields();
      }
      private SensorMagnetoPayload(boolean noInit) {}

      private static final SensorMagnetoPayload defaultInstance;
      public static SensorMagnetoPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorMagnetoPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorMagnetoPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorMagnetoPayload_fieldAccessorTable;
      }

      // optional double x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private double x_ = 0D;
      public boolean hasX() { return hasX; }
      public double getX() { return x_; }

      // optional double y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private double y_ = 0D;
      public boolean hasY() { return hasY; }
      public double getY() { return y_; }

      // optional double z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private boolean hasZ;
      private double z_ = 0D;
      public boolean hasZ() { return hasZ; }
      public double getZ() { return z_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeDouble(1, getX());
        }
        if (hasY()) {
          output.writeDouble(2, getY());
        }
        if (hasZ()) {
          output.writeDouble(3, getZ());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(2, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(3, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorMagnetoPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorMagnetoPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorMagnetoPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorMagnetoPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorMagnetoPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorMagnetoPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorMagnetoPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorMagnetoPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorMagnetoPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorMagnetoPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorMagnetoPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorMagnetoPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorMagnetoPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorMagnetoPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorMagnetoPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorMagnetoPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorMagnetoPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorMagnetoPayload.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setX(input.readDouble());
                break;
              }
              case 17: {
                setY(input.readDouble());
                break;
              }
              case 25: {
                setZ(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public double getX() {
          return result.getX();
        }
        public Builder setX(double value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0D;
          return this;
        }

        // optional double y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public double getY() {
          return result.getY();
        }
        public Builder setY(double value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0D;
          return this;
        }

        // optional double z = 3;
        public boolean hasZ() {
          return result.hasZ();
        }
        public double getZ() {
          return result.getZ();
        }
        public Builder setZ(double value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorMagnetoPayload)
      }

      static {
        defaultInstance = new SensorMagnetoPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorMagnetoPayload)
    }

    public static final class SensorOrientationPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorOrientationPayload.newBuilder() to construct.
      private SensorOrientationPayload() {
        initFields();
      }
      private SensorOrientationPayload(boolean noInit) {}

      private static final SensorOrientationPayload defaultInstance;
      public static SensorOrientationPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorOrientationPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorOrientationPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorOrientationPayload_fieldAccessorTable;
      }

      // optional double azimuth = 1;
      public static final int AZIMUTH_FIELD_NUMBER = 1;
      private boolean hasAzimuth;
      private double azimuth_ = 0D;
      public boolean hasAzimuth() { return hasAzimuth; }
      public double getAzimuth() { return azimuth_; }

      // optional double pitch = 2;
      public static final int PITCH_FIELD_NUMBER = 2;
      private boolean hasPitch;
      private double pitch_ = 0D;
      public boolean hasPitch() { return hasPitch; }
      public double getPitch() { return pitch_; }

      // optional double roll = 3;
      public static final int ROLL_FIELD_NUMBER = 3;
      private boolean hasRoll;
      private double roll_ = 0D;
      public boolean hasRoll() { return hasRoll; }
      public double getRoll() { return roll_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasAzimuth()) {
          output.writeDouble(1, getAzimuth());
        }
        if (hasPitch()) {
          output.writeDouble(2, getPitch());
        }
        if (hasRoll()) {
          output.writeDouble(3, getRoll());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasAzimuth()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getAzimuth());
        }
        if (hasPitch()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(2, getPitch());
        }
        if (hasRoll()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(3, getRoll());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorOrientationPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorOrientationPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorOrientationPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorOrientationPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorOrientationPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorOrientationPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorOrientationPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorOrientationPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorOrientationPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorOrientationPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorOrientationPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorOrientationPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorOrientationPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorOrientationPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorOrientationPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorOrientationPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorOrientationPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorOrientationPayload.getDefaultInstance()) return this;
          if (other.hasAzimuth()) {
            setAzimuth(other.getAzimuth());
          }
          if (other.hasPitch()) {
            setPitch(other.getPitch());
          }
          if (other.hasRoll()) {
            setRoll(other.getRoll());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setAzimuth(input.readDouble());
                break;
              }
              case 17: {
                setPitch(input.readDouble());
                break;
              }
              case 25: {
                setRoll(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double azimuth = 1;
        public boolean hasAzimuth() {
          return result.hasAzimuth();
        }
        public double getAzimuth() {
          return result.getAzimuth();
        }
        public Builder setAzimuth(double value) {
          result.hasAzimuth = true;
          result.azimuth_ = value;
          return this;
        }
        public Builder clearAzimuth() {
          result.hasAzimuth = false;
          result.azimuth_ = 0D;
          return this;
        }

        // optional double pitch = 2;
        public boolean hasPitch() {
          return result.hasPitch();
        }
        public double getPitch() {
          return result.getPitch();
        }
        public Builder setPitch(double value) {
          result.hasPitch = true;
          result.pitch_ = value;
          return this;
        }
        public Builder clearPitch() {
          result.hasPitch = false;
          result.pitch_ = 0D;
          return this;
        }

        // optional double roll = 3;
        public boolean hasRoll() {
          return result.hasRoll();
        }
        public double getRoll() {
          return result.getRoll();
        }
        public Builder setRoll(double value) {
          result.hasRoll = true;
          result.roll_ = value;
          return this;
        }
        public Builder clearRoll() {
          result.hasRoll = false;
          result.roll_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorOrientationPayload)
      }

      static {
        defaultInstance = new SensorOrientationPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorOrientationPayload)
    }

    public static final class SensorGyroPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorGyroPayload.newBuilder() to construct.
      private SensorGyroPayload() {
        initFields();
      }
      private SensorGyroPayload(boolean noInit) {}

      private static final SensorGyroPayload defaultInstance;
      public static SensorGyroPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorGyroPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorGyroPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorGyroPayload_fieldAccessorTable;
      }

      // optional double azimuth = 1;
      public static final int AZIMUTH_FIELD_NUMBER = 1;
      private boolean hasAzimuth;
      private double azimuth_ = 0D;
      public boolean hasAzimuth() { return hasAzimuth; }
      public double getAzimuth() { return azimuth_; }

      // optional double pitch = 2;
      public static final int PITCH_FIELD_NUMBER = 2;
      private boolean hasPitch;
      private double pitch_ = 0D;
      public boolean hasPitch() { return hasPitch; }
      public double getPitch() { return pitch_; }

      // optional double roll = 3;
      public static final int ROLL_FIELD_NUMBER = 3;
      private boolean hasRoll;
      private double roll_ = 0D;
      public boolean hasRoll() { return hasRoll; }
      public double getRoll() { return roll_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasAzimuth()) {
          output.writeDouble(1, getAzimuth());
        }
        if (hasPitch()) {
          output.writeDouble(2, getPitch());
        }
        if (hasRoll()) {
          output.writeDouble(3, getRoll());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasAzimuth()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getAzimuth());
        }
        if (hasPitch()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(2, getPitch());
        }
        if (hasRoll()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(3, getRoll());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGyroPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorGyroPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorGyroPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorGyroPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorGyroPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorGyroPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorGyroPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorGyroPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorGyroPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorGyroPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorGyroPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorGyroPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorGyroPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorGyroPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorGyroPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorGyroPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorGyroPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorGyroPayload.getDefaultInstance()) return this;
          if (other.hasAzimuth()) {
            setAzimuth(other.getAzimuth());
          }
          if (other.hasPitch()) {
            setPitch(other.getPitch());
          }
          if (other.hasRoll()) {
            setRoll(other.getRoll());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setAzimuth(input.readDouble());
                break;
              }
              case 17: {
                setPitch(input.readDouble());
                break;
              }
              case 25: {
                setRoll(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double azimuth = 1;
        public boolean hasAzimuth() {
          return result.hasAzimuth();
        }
        public double getAzimuth() {
          return result.getAzimuth();
        }
        public Builder setAzimuth(double value) {
          result.hasAzimuth = true;
          result.azimuth_ = value;
          return this;
        }
        public Builder clearAzimuth() {
          result.hasAzimuth = false;
          result.azimuth_ = 0D;
          return this;
        }

        // optional double pitch = 2;
        public boolean hasPitch() {
          return result.hasPitch();
        }
        public double getPitch() {
          return result.getPitch();
        }
        public Builder setPitch(double value) {
          result.hasPitch = true;
          result.pitch_ = value;
          return this;
        }
        public Builder clearPitch() {
          result.hasPitch = false;
          result.pitch_ = 0D;
          return this;
        }

        // optional double roll = 3;
        public boolean hasRoll() {
          return result.hasRoll();
        }
        public double getRoll() {
          return result.getRoll();
        }
        public Builder setRoll(double value) {
          result.hasRoll = true;
          result.roll_ = value;
          return this;
        }
        public Builder clearRoll() {
          result.hasRoll = false;
          result.roll_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorGyroPayload)
      }

      static {
        defaultInstance = new SensorGyroPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorGyroPayload)
    }

    public static final class SensorGravityPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorGravityPayload.newBuilder() to construct.
      private SensorGravityPayload() {
        initFields();
      }
      private SensorGravityPayload(boolean noInit) {}

      private static final SensorGravityPayload defaultInstance;
      public static SensorGravityPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorGravityPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorGravityPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorGravityPayload_fieldAccessorTable;
      }

      // optional double x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private double x_ = 0D;
      public boolean hasX() { return hasX; }
      public double getX() { return x_; }

      // optional double y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private double y_ = 0D;
      public boolean hasY() { return hasY; }
      public double getY() { return y_; }

      // optional double z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private boolean hasZ;
      private double z_ = 0D;
      public boolean hasZ() { return hasZ; }
      public double getZ() { return z_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeDouble(1, getX());
        }
        if (hasY()) {
          output.writeDouble(2, getY());
        }
        if (hasZ()) {
          output.writeDouble(3, getZ());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(2, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(3, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorGravityPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorGravityPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorGravityPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorGravityPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorGravityPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorGravityPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorGravityPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorGravityPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorGravityPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorGravityPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorGravityPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorGravityPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorGravityPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorGravityPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorGravityPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorGravityPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorGravityPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorGravityPayload.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setX(input.readDouble());
                break;
              }
              case 17: {
                setY(input.readDouble());
                break;
              }
              case 25: {
                setZ(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public double getX() {
          return result.getX();
        }
        public Builder setX(double value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0D;
          return this;
        }

        // optional double y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public double getY() {
          return result.getY();
        }
        public Builder setY(double value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0D;
          return this;
        }

        // optional double z = 3;
        public boolean hasZ() {
          return result.hasZ();
        }
        public double getZ() {
          return result.getZ();
        }
        public Builder setZ(double value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorGravityPayload)
      }

      static {
        defaultInstance = new SensorGravityPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorGravityPayload)
    }

    public static final class SensorLinearAccPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorLinearAccPayload.newBuilder() to construct.
      private SensorLinearAccPayload() {
        initFields();
      }
      private SensorLinearAccPayload(boolean noInit) {}

      private static final SensorLinearAccPayload defaultInstance;
      public static SensorLinearAccPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorLinearAccPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorLinearAccPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorLinearAccPayload_fieldAccessorTable;
      }

      // optional double x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private double x_ = 0D;
      public boolean hasX() { return hasX; }
      public double getX() { return x_; }

      // optional double y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private double y_ = 0D;
      public boolean hasY() { return hasY; }
      public double getY() { return y_; }

      // optional double z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private boolean hasZ;
      private double z_ = 0D;
      public boolean hasZ() { return hasZ; }
      public double getZ() { return z_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeDouble(1, getX());
        }
        if (hasY()) {
          output.writeDouble(2, getY());
        }
        if (hasZ()) {
          output.writeDouble(3, getZ());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(2, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(3, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLinearAccPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorLinearAccPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorLinearAccPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorLinearAccPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorLinearAccPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorLinearAccPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorLinearAccPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorLinearAccPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorLinearAccPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorLinearAccPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorLinearAccPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorLinearAccPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorLinearAccPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorLinearAccPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorLinearAccPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorLinearAccPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorLinearAccPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorLinearAccPayload.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setX(input.readDouble());
                break;
              }
              case 17: {
                setY(input.readDouble());
                break;
              }
              case 25: {
                setZ(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public double getX() {
          return result.getX();
        }
        public Builder setX(double value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0D;
          return this;
        }

        // optional double y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public double getY() {
          return result.getY();
        }
        public Builder setY(double value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0D;
          return this;
        }

        // optional double z = 3;
        public boolean hasZ() {
          return result.hasZ();
        }
        public double getZ() {
          return result.getZ();
        }
        public Builder setZ(double value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorLinearAccPayload)
      }

      static {
        defaultInstance = new SensorLinearAccPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorLinearAccPayload)
    }

    public static final class SensorRotVectorPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorRotVectorPayload.newBuilder() to construct.
      private SensorRotVectorPayload() {
        initFields();
      }
      private SensorRotVectorPayload(boolean noInit) {}

      private static final SensorRotVectorPayload defaultInstance;
      public static SensorRotVectorPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorRotVectorPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorRotVectorPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorRotVectorPayload_fieldAccessorTable;
      }

      // optional uint32 size = 1;
      public static final int SIZE_FIELD_NUMBER = 1;
      private boolean hasSize;
      private int size_ = 0;
      public boolean hasSize() { return hasSize; }
      public int getSize() { return size_; }

      // repeated double data = 2 [packed = true];
      public static final int DATA_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> data_ =
              java.util.Collections.emptyList();
      public java.util.List<java.lang.Double> getDataList() {
        return data_;
      }
      public int getDataCount() { return data_.size(); }
      public double getData(int index) {
        return data_.get(index);
      }
      private int dataMemoizedSerializedSize = -1;

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasSize()) {
          output.writeUInt32(1, getSize());
        }
        if (getDataList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(dataMemoizedSerializedSize);
        }
        for (double element : getDataList()) {
          output.writeDoubleNoTag(element);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasSize()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeUInt32Size(1, getSize());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getDataList().size();
          size += dataSize;
          if (!getDataList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                    .computeInt32SizeNoTag(dataSize);
          }
          dataMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRotVectorPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorRotVectorPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorRotVectorPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorRotVectorPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorRotVectorPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorRotVectorPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorRotVectorPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorRotVectorPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorRotVectorPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorRotVectorPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorRotVectorPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorRotVectorPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorRotVectorPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          if (result.data_ != java.util.Collections.EMPTY_LIST) {
            result.data_ =
                    java.util.Collections.unmodifiableList(result.data_);
          }
          SensorsPacket.sensors_packet.SensorRotVectorPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorRotVectorPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorRotVectorPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorRotVectorPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorRotVectorPayload.getDefaultInstance()) return this;
          if (other.hasSize()) {
            setSize(other.getSize());
          }
          if (!other.data_.isEmpty()) {
            if (result.data_.isEmpty()) {
              result.data_ = new java.util.ArrayList<java.lang.Double>();
            }
            result.data_.addAll(other.data_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setSize(input.readUInt32());
                break;
              }
              case 17: {
                addData(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addData(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        }


        // optional uint32 size = 1;
        public boolean hasSize() {
          return result.hasSize();
        }
        public int getSize() {
          return result.getSize();
        }
        public Builder setSize(int value) {
          result.hasSize = true;
          result.size_ = value;
          return this;
        }
        public Builder clearSize() {
          result.hasSize = false;
          result.size_ = 0;
          return this;
        }

        // repeated double data = 2 [packed = true];
        public java.util.List<java.lang.Double> getDataList() {
          return java.util.Collections.unmodifiableList(result.data_);
        }
        public int getDataCount() {
          return result.getDataCount();
        }
        public double getData(int index) {
          return result.getData(index);
        }
        public Builder setData(int index, double value) {
          result.data_.set(index, value);
          return this;
        }
        public Builder addData(double value) {
          if (result.data_.isEmpty()) {
            result.data_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.data_.add(value);
          return this;
        }
        public Builder addAllData(
                java.lang.Iterable<? extends java.lang.Double> values) {
          if (result.data_.isEmpty()) {
            result.data_ = new java.util.ArrayList<java.lang.Double>();
          }
          super.addAll(values, result.data_);
          return this;
        }
        public Builder clearData() {
          result.data_ = java.util.Collections.emptyList();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorRotVectorPayload)
      }

      static {
        defaultInstance = new SensorRotVectorPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorRotVectorPayload)
    }

    public static final class SensorTemperaturePayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorTemperaturePayload.newBuilder() to construct.
      private SensorTemperaturePayload() {
        initFields();
      }
      private SensorTemperaturePayload(boolean noInit) {}

      private static final SensorTemperaturePayload defaultInstance;
      public static SensorTemperaturePayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorTemperaturePayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorTemperaturePayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorTemperaturePayload_fieldAccessorTable;
      }

      // optional double temperature = 1;
      public static final int TEMPERATURE_FIELD_NUMBER = 1;
      private boolean hasTemperature;
      private double temperature_ = 0D;
      public boolean hasTemperature() { return hasTemperature; }
      public double getTemperature() { return temperature_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasTemperature()) {
          output.writeDouble(1, getTemperature());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasTemperature()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getTemperature());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorTemperaturePayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorTemperaturePayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorTemperaturePayload result;

        // Construct using SensorsPacket.sensors_packet.SensorTemperaturePayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorTemperaturePayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorTemperaturePayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorTemperaturePayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorTemperaturePayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorTemperaturePayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorTemperaturePayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorTemperaturePayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorTemperaturePayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorTemperaturePayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorTemperaturePayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorTemperaturePayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorTemperaturePayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorTemperaturePayload other) {
          if (other == SensorsPacket.sensors_packet.SensorTemperaturePayload.getDefaultInstance()) return this;
          if (other.hasTemperature()) {
            setTemperature(other.getTemperature());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setTemperature(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double temperature = 1;
        public boolean hasTemperature() {
          return result.hasTemperature();
        }
        public double getTemperature() {
          return result.getTemperature();
        }
        public Builder setTemperature(double value) {
          result.hasTemperature = true;
          result.temperature_ = value;
          return this;
        }
        public Builder clearTemperature() {
          result.hasTemperature = false;
          result.temperature_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorTemperaturePayload)
      }

      static {
        defaultInstance = new SensorTemperaturePayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorTemperaturePayload)
    }

    public static final class SensorProximityPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorProximityPayload.newBuilder() to construct.
      private SensorProximityPayload() {
        initFields();
      }
      private SensorProximityPayload(boolean noInit) {}

      private static final SensorProximityPayload defaultInstance;
      public static SensorProximityPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorProximityPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorProximityPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorProximityPayload_fieldAccessorTable;
      }

      // optional double distance = 1;
      public static final int DISTANCE_FIELD_NUMBER = 1;
      private boolean hasDistance;
      private double distance_ = 0D;
      public boolean hasDistance() { return hasDistance; }
      public double getDistance() { return distance_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasDistance()) {
          output.writeDouble(1, getDistance());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasDistance()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getDistance());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorProximityPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorProximityPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorProximityPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorProximityPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorProximityPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorProximityPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorProximityPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorProximityPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorProximityPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorProximityPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorProximityPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorProximityPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorProximityPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorProximityPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorProximityPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorProximityPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorProximityPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorProximityPayload.getDefaultInstance()) return this;
          if (other.hasDistance()) {
            setDistance(other.getDistance());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setDistance(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double distance = 1;
        public boolean hasDistance() {
          return result.hasDistance();
        }
        public double getDistance() {
          return result.getDistance();
        }
        public Builder setDistance(double value) {
          result.hasDistance = true;
          result.distance_ = value;
          return this;
        }
        public Builder clearDistance() {
          result.hasDistance = false;
          result.distance_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorProximityPayload)
      }

      static {
        defaultInstance = new SensorProximityPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorProximityPayload)
    }

    public static final class SensorLightPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorLightPayload.newBuilder() to construct.
      private SensorLightPayload() {
        initFields();
      }
      private SensorLightPayload(boolean noInit) {}

      private static final SensorLightPayload defaultInstance;
      public static SensorLightPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorLightPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorLightPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorLightPayload_fieldAccessorTable;
      }

      // optional double light = 1;
      public static final int LIGHT_FIELD_NUMBER = 1;
      private boolean hasLight;
      private double light_ = 0D;
      public boolean hasLight() { return hasLight; }
      public double getLight() { return light_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasLight()) {
          output.writeDouble(1, getLight());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasLight()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getLight());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorLightPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorLightPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorLightPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorLightPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorLightPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorLightPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorLightPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorLightPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorLightPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorLightPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorLightPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorLightPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorLightPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorLightPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorLightPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorLightPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorLightPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorLightPayload.getDefaultInstance()) return this;
          if (other.hasLight()) {
            setLight(other.getLight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setLight(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double light = 1;
        public boolean hasLight() {
          return result.hasLight();
        }
        public double getLight() {
          return result.getLight();
        }
        public Builder setLight(double value) {
          result.hasLight = true;
          result.light_ = value;
          return this;
        }
        public Builder clearLight() {
          result.hasLight = false;
          result.light_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorLightPayload)
      }

      static {
        defaultInstance = new SensorLightPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorLightPayload)
    }

    public static final class SensorPressurePayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorPressurePayload.newBuilder() to construct.
      private SensorPressurePayload() {
        initFields();
      }
      private SensorPressurePayload(boolean noInit) {}

      private static final SensorPressurePayload defaultInstance;
      public static SensorPressurePayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorPressurePayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorPressurePayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorPressurePayload_fieldAccessorTable;
      }

      // optional double pressure = 1;
      public static final int PRESSURE_FIELD_NUMBER = 1;
      private boolean hasPressure;
      private double pressure_ = 0D;
      public boolean hasPressure() { return hasPressure; }
      public double getPressure() { return pressure_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasPressure()) {
          output.writeDouble(1, getPressure());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasPressure()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getPressure());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorPressurePayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorPressurePayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorPressurePayload result;

        // Construct using SensorsPacket.sensors_packet.SensorPressurePayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorPressurePayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorPressurePayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorPressurePayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorPressurePayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorPressurePayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorPressurePayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorPressurePayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorPressurePayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorPressurePayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorPressurePayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorPressurePayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorPressurePayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorPressurePayload other) {
          if (other == SensorsPacket.sensors_packet.SensorPressurePayload.getDefaultInstance()) return this;
          if (other.hasPressure()) {
            setPressure(other.getPressure());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setPressure(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double pressure = 1;
        public boolean hasPressure() {
          return result.hasPressure();
        }
        public double getPressure() {
          return result.getPressure();
        }
        public Builder setPressure(double value) {
          result.hasPressure = true;
          result.pressure_ = value;
          return this;
        }
        public Builder clearPressure() {
          result.hasPressure = false;
          result.pressure_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorPressurePayload)
      }

      static {
        defaultInstance = new SensorPressurePayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorPressurePayload)
    }

    public static final class SensorRelativeHumidityPayload extends
            com.google.protobuf.GeneratedMessage {
      // Use SensorRelativeHumidityPayload.newBuilder() to construct.
      private SensorRelativeHumidityPayload() {
        initFields();
      }
      private SensorRelativeHumidityPayload(boolean noInit) {}

      private static final SensorRelativeHumidityPayload defaultInstance;
      public static SensorRelativeHumidityPayload getDefaultInstance() {
        return defaultInstance;
      }

      public SensorRelativeHumidityPayload getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SensorsPacket.internal_static_sensors_packet_SensorRelativeHumidityPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SensorsPacket.internal_static_sensors_packet_SensorRelativeHumidityPayload_fieldAccessorTable;
      }

      // optional double relative_humidity = 1;
      public static final int RELATIVE_HUMIDITY_FIELD_NUMBER = 1;
      private boolean hasRelativeHumidity;
      private double relativeHumidity_ = 0D;
      public boolean hasRelativeHumidity() { return hasRelativeHumidity; }
      public double getRelativeHumidity() { return relativeHumidity_; }

      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
        getSerializedSize();
        if (hasRelativeHumidity()) {
          output.writeDouble(1, getRelativeHumidity());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (hasRelativeHumidity()) {
          size += com.google.protobuf.CodedOutputStream
                  .computeDoubleSize(1, getRelativeHumidity());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(java.io.InputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SensorsPacket.sensors_packet.SensorRelativeHumidityPayload parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SensorsPacket.sensors_packet.SensorRelativeHumidityPayload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SensorsPacket.sensors_packet.SensorRelativeHumidityPayload result;

        // Construct using SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.newBuilder()
        private Builder() {}

        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SensorsPacket.sensors_packet.SensorRelativeHumidityPayload();
          return builder;
        }

        protected SensorsPacket.sensors_packet.SensorRelativeHumidityPayload internalGetResult() {
          return result;
        }

        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
                    "Cannot call clear() after build().");
          }
          result = new SensorsPacket.sensors_packet.SensorRelativeHumidityPayload();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(result);
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
          return SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.getDescriptor();
        }

        public SensorsPacket.sensors_packet.SensorRelativeHumidityPayload getDefaultInstanceForType() {
          return SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.getDefaultInstance();
        }

        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SensorsPacket.sensors_packet.SensorRelativeHumidityPayload build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }

        private SensorsPacket.sensors_packet.SensorRelativeHumidityPayload buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
                    result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public SensorsPacket.sensors_packet.SensorRelativeHumidityPayload buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
                    "build() has already been called on this Builder.");
          }
          SensorsPacket.sensors_packet.SensorRelativeHumidityPayload returnMe = result;
          result = null;
          return returnMe;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SensorsPacket.sensors_packet.SensorRelativeHumidityPayload) {
            return mergeFrom((SensorsPacket.sensors_packet.SensorRelativeHumidityPayload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SensorsPacket.sensors_packet.SensorRelativeHumidityPayload other) {
          if (other == SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.getDefaultInstance()) return this;
          if (other.hasRelativeHumidity()) {
            setRelativeHumidity(other.getRelativeHumidity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder(
                          this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                        extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setRelativeHumidity(input.readDouble());
                break;
              }
            }
          }
        }


        // optional double relative_humidity = 1;
        public boolean hasRelativeHumidity() {
          return result.hasRelativeHumidity();
        }
        public double getRelativeHumidity() {
          return result.getRelativeHumidity();
        }
        public Builder setRelativeHumidity(double value) {
          result.hasRelativeHumidity = true;
          result.relativeHumidity_ = value;
          return this;
        }
        public Builder clearRelativeHumidity() {
          result.hasRelativeHumidity = false;
          result.relativeHumidity_ = 0D;
          return this;
        }

        // @@protoc_insertion_point(builder_scope:sensors_packet.SensorRelativeHumidityPayload)
      }

      static {
        defaultInstance = new SensorRelativeHumidityPayload(true);
        SensorsPacket.internalForceInit();
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:sensors_packet.SensorRelativeHumidityPayload)
    }

    // optional .sensors_packet.SensorAcceleroPayload accelero = 1;
    public static final int ACCELERO_FIELD_NUMBER = 1;
    private boolean hasAccelero;
    private SensorsPacket.sensors_packet.SensorAcceleroPayload accelero_;
    public boolean hasAccelero() { return hasAccelero; }
    public SensorsPacket.sensors_packet.SensorAcceleroPayload getAccelero() { return accelero_; }

    // optional .sensors_packet.SensorMagnetoPayload magneto = 2;
    public static final int MAGNETO_FIELD_NUMBER = 2;
    private boolean hasMagneto;
    private SensorsPacket.sensors_packet.SensorMagnetoPayload magneto_;
    public boolean hasMagneto() { return hasMagneto; }
    public SensorsPacket.sensors_packet.SensorMagnetoPayload getMagneto() { return magneto_; }

    // optional .sensors_packet.SensorOrientationPayload orientation = 3;
    public static final int ORIENTATION_FIELD_NUMBER = 3;
    private boolean hasOrientation;
    private SensorsPacket.sensors_packet.SensorOrientationPayload orientation_;
    public boolean hasOrientation() { return hasOrientation; }
    public SensorsPacket.sensors_packet.SensorOrientationPayload getOrientation() { return orientation_; }

    // optional .sensors_packet.SensorGyroPayload gyroscope = 4;
    public static final int GYROSCOPE_FIELD_NUMBER = 4;
    private boolean hasGyroscope;
    private SensorsPacket.sensors_packet.SensorGyroPayload gyroscope_;
    public boolean hasGyroscope() { return hasGyroscope; }
    public SensorsPacket.sensors_packet.SensorGyroPayload getGyroscope() { return gyroscope_; }

    // optional .sensors_packet.SensorGravityPayload gravity = 5;
    public static final int GRAVITY_FIELD_NUMBER = 5;
    private boolean hasGravity;
    private SensorsPacket.sensors_packet.SensorGravityPayload gravity_;
    public boolean hasGravity() { return hasGravity; }
    public SensorsPacket.sensors_packet.SensorGravityPayload getGravity() { return gravity_; }

    // optional .sensors_packet.SensorLinearAccPayload linear_acc = 6;
    public static final int LINEAR_ACC_FIELD_NUMBER = 6;
    private boolean hasLinearAcc;
    private SensorsPacket.sensors_packet.SensorLinearAccPayload linearAcc_;
    public boolean hasLinearAcc() { return hasLinearAcc; }
    public SensorsPacket.sensors_packet.SensorLinearAccPayload getLinearAcc() { return linearAcc_; }

    // optional .sensors_packet.SensorRotVectorPayload rotvector = 7;
    public static final int ROTVECTOR_FIELD_NUMBER = 7;
    private boolean hasRotvector;
    private SensorsPacket.sensors_packet.SensorRotVectorPayload rotvector_;
    public boolean hasRotvector() { return hasRotvector; }
    public SensorsPacket.sensors_packet.SensorRotVectorPayload getRotvector() { return rotvector_; }

    // optional .sensors_packet.SensorTemperaturePayload thermometer = 8;
    public static final int THERMOMETER_FIELD_NUMBER = 8;
    private boolean hasThermometer;
    private SensorsPacket.sensors_packet.SensorTemperaturePayload thermometer_;
    public boolean hasThermometer() { return hasThermometer; }
    public SensorsPacket.sensors_packet.SensorTemperaturePayload getThermometer() { return thermometer_; }

    // optional .sensors_packet.SensorProximityPayload proximity = 9;
    public static final int PROXIMITY_FIELD_NUMBER = 9;
    private boolean hasProximity;
    private SensorsPacket.sensors_packet.SensorProximityPayload proximity_;
    public boolean hasProximity() { return hasProximity; }
    public SensorsPacket.sensors_packet.SensorProximityPayload getProximity() { return proximity_; }

    // optional .sensors_packet.SensorLightPayload luxmeter = 10;
    public static final int LUXMETER_FIELD_NUMBER = 10;
    private boolean hasLuxmeter;
    private SensorsPacket.sensors_packet.SensorLightPayload luxmeter_;
    public boolean hasLuxmeter() { return hasLuxmeter; }
    public SensorsPacket.sensors_packet.SensorLightPayload getLuxmeter() { return luxmeter_; }

    // optional .sensors_packet.SensorPressurePayload barometer = 11;
    public static final int BAROMETER_FIELD_NUMBER = 11;
    private boolean hasBarometer;
    private SensorsPacket.sensors_packet.SensorPressurePayload barometer_;
    public boolean hasBarometer() { return hasBarometer; }
    public SensorsPacket.sensors_packet.SensorPressurePayload getBarometer() { return barometer_; }

    // optional .sensors_packet.SensorRelativeHumidityPayload hygrometer = 12;
    public static final int HYGROMETER_FIELD_NUMBER = 12;
    private boolean hasHygrometer;
    private SensorsPacket.sensors_packet.SensorRelativeHumidityPayload hygrometer_;
    public boolean hasHygrometer() { return hasHygrometer; }
    public SensorsPacket.sensors_packet.SensorRelativeHumidityPayload getHygrometer() { return hygrometer_; }

    private void initFields() {
      accelero_ = SensorsPacket.sensors_packet.SensorAcceleroPayload.getDefaultInstance();
      magneto_ = SensorsPacket.sensors_packet.SensorMagnetoPayload.getDefaultInstance();
      orientation_ = SensorsPacket.sensors_packet.SensorOrientationPayload.getDefaultInstance();
      gyroscope_ = SensorsPacket.sensors_packet.SensorGyroPayload.getDefaultInstance();
      gravity_ = SensorsPacket.sensors_packet.SensorGravityPayload.getDefaultInstance();
      linearAcc_ = SensorsPacket.sensors_packet.SensorLinearAccPayload.getDefaultInstance();
      rotvector_ = SensorsPacket.sensors_packet.SensorRotVectorPayload.getDefaultInstance();
      thermometer_ = SensorsPacket.sensors_packet.SensorTemperaturePayload.getDefaultInstance();
      proximity_ = SensorsPacket.sensors_packet.SensorProximityPayload.getDefaultInstance();
      luxmeter_ = SensorsPacket.sensors_packet.SensorLightPayload.getDefaultInstance();
      barometer_ = SensorsPacket.sensors_packet.SensorPressurePayload.getDefaultInstance();
      hygrometer_ = SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (hasAccelero()) {
        output.writeMessage(1, getAccelero());
      }
      if (hasMagneto()) {
        output.writeMessage(2, getMagneto());
      }
      if (hasOrientation()) {
        output.writeMessage(3, getOrientation());
      }
      if (hasGyroscope()) {
        output.writeMessage(4, getGyroscope());
      }
      if (hasGravity()) {
        output.writeMessage(5, getGravity());
      }
      if (hasLinearAcc()) {
        output.writeMessage(6, getLinearAcc());
      }
      if (hasRotvector()) {
        output.writeMessage(7, getRotvector());
      }
      if (hasThermometer()) {
        output.writeMessage(8, getThermometer());
      }
      if (hasProximity()) {
        output.writeMessage(9, getProximity());
      }
      if (hasLuxmeter()) {
        output.writeMessage(10, getLuxmeter());
      }
      if (hasBarometer()) {
        output.writeMessage(11, getBarometer());
      }
      if (hasHygrometer()) {
        output.writeMessage(12, getHygrometer());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasAccelero()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, getAccelero());
      }
      if (hasMagneto()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, getMagneto());
      }
      if (hasOrientation()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(3, getOrientation());
      }
      if (hasGyroscope()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, getGyroscope());
      }
      if (hasGravity()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(5, getGravity());
      }
      if (hasLinearAcc()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, getLinearAcc());
      }
      if (hasRotvector()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, getRotvector());
      }
      if (hasThermometer()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(8, getThermometer());
      }
      if (hasProximity()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(9, getProximity());
      }
      if (hasLuxmeter()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(10, getLuxmeter());
      }
      if (hasBarometer()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(11, getBarometer());
      }
      if (hasHygrometer()) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(12, getHygrometer());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static SensorsPacket.sensors_packet parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SensorsPacket.sensors_packet parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static SensorsPacket.sensors_packet parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SensorsPacket.sensors_packet parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static SensorsPacket.sensors_packet parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SensorsPacket.sensors_packet parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }
    public static SensorsPacket.sensors_packet parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SensorsPacket.sensors_packet parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SensorsPacket.sensors_packet parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SensorsPacket.sensors_packet parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SensorsPacket.sensors_packet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SensorsPacket.sensors_packet result;

      // Construct using SensorsPacket.sensors_packet.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SensorsPacket.sensors_packet();
        return builder;
      }

      protected SensorsPacket.sensors_packet internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
                  "Cannot call clear() after build().");
        }
        result = new SensorsPacket.sensors_packet();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SensorsPacket.sensors_packet.getDescriptor();
      }

      public SensorsPacket.sensors_packet getDefaultInstanceForType() {
        return SensorsPacket.sensors_packet.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SensorsPacket.sensors_packet build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private SensorsPacket.sensors_packet buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public SensorsPacket.sensors_packet buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
                  "build() has already been called on this Builder.");
        }
        SensorsPacket.sensors_packet returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SensorsPacket.sensors_packet) {
          return mergeFrom((SensorsPacket.sensors_packet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SensorsPacket.sensors_packet other) {
        if (other == SensorsPacket.sensors_packet.getDefaultInstance()) return this;
        if (other.hasAccelero()) {
          mergeAccelero(other.getAccelero());
        }
        if (other.hasMagneto()) {
          mergeMagneto(other.getMagneto());
        }
        if (other.hasOrientation()) {
          mergeOrientation(other.getOrientation());
        }
        if (other.hasGyroscope()) {
          mergeGyroscope(other.getGyroscope());
        }
        if (other.hasGravity()) {
          mergeGravity(other.getGravity());
        }
        if (other.hasLinearAcc()) {
          mergeLinearAcc(other.getLinearAcc());
        }
        if (other.hasRotvector()) {
          mergeRotvector(other.getRotvector());
        }
        if (other.hasThermometer()) {
          mergeThermometer(other.getThermometer());
        }
        if (other.hasProximity()) {
          mergeProximity(other.getProximity());
        }
        if (other.hasLuxmeter()) {
          mergeLuxmeter(other.getLuxmeter());
        }
        if (other.hasBarometer()) {
          mergeBarometer(other.getBarometer());
        }
        if (other.hasHygrometer()) {
          mergeHygrometer(other.getHygrometer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder(
                        this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              SensorsPacket.sensors_packet.SensorAcceleroPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorAcceleroPayload.newBuilder();
              if (hasAccelero()) {
                subBuilder.mergeFrom(getAccelero());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccelero(subBuilder.buildPartial());
              break;
            }
            case 18: {
              SensorsPacket.sensors_packet.SensorMagnetoPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorMagnetoPayload.newBuilder();
              if (hasMagneto()) {
                subBuilder.mergeFrom(getMagneto());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMagneto(subBuilder.buildPartial());
              break;
            }
            case 26: {
              SensorsPacket.sensors_packet.SensorOrientationPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorOrientationPayload.newBuilder();
              if (hasOrientation()) {
                subBuilder.mergeFrom(getOrientation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOrientation(subBuilder.buildPartial());
              break;
            }
            case 34: {
              SensorsPacket.sensors_packet.SensorGyroPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorGyroPayload.newBuilder();
              if (hasGyroscope()) {
                subBuilder.mergeFrom(getGyroscope());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGyroscope(subBuilder.buildPartial());
              break;
            }
            case 42: {
              SensorsPacket.sensors_packet.SensorGravityPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorGravityPayload.newBuilder();
              if (hasGravity()) {
                subBuilder.mergeFrom(getGravity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGravity(subBuilder.buildPartial());
              break;
            }
            case 50: {
              SensorsPacket.sensors_packet.SensorLinearAccPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorLinearAccPayload.newBuilder();
              if (hasLinearAcc()) {
                subBuilder.mergeFrom(getLinearAcc());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLinearAcc(subBuilder.buildPartial());
              break;
            }
            case 58: {
              SensorsPacket.sensors_packet.SensorRotVectorPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorRotVectorPayload.newBuilder();
              if (hasRotvector()) {
                subBuilder.mergeFrom(getRotvector());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRotvector(subBuilder.buildPartial());
              break;
            }
            case 66: {
              SensorsPacket.sensors_packet.SensorTemperaturePayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorTemperaturePayload.newBuilder();
              if (hasThermometer()) {
                subBuilder.mergeFrom(getThermometer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setThermometer(subBuilder.buildPartial());
              break;
            }
            case 74: {
              SensorsPacket.sensors_packet.SensorProximityPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorProximityPayload.newBuilder();
              if (hasProximity()) {
                subBuilder.mergeFrom(getProximity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProximity(subBuilder.buildPartial());
              break;
            }
            case 82: {
              SensorsPacket.sensors_packet.SensorLightPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorLightPayload.newBuilder();
              if (hasLuxmeter()) {
                subBuilder.mergeFrom(getLuxmeter());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLuxmeter(subBuilder.buildPartial());
              break;
            }
            case 90: {
              SensorsPacket.sensors_packet.SensorPressurePayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorPressurePayload.newBuilder();
              if (hasBarometer()) {
                subBuilder.mergeFrom(getBarometer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBarometer(subBuilder.buildPartial());
              break;
            }
            case 98: {
              SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.Builder subBuilder = SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.newBuilder();
              if (hasHygrometer()) {
                subBuilder.mergeFrom(getHygrometer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHygrometer(subBuilder.buildPartial());
              break;
            }
          }
        }
      }


      // optional .sensors_packet.SensorAcceleroPayload accelero = 1;
      public boolean hasAccelero() {
        return result.hasAccelero();
      }
      public SensorsPacket.sensors_packet.SensorAcceleroPayload getAccelero() {
        return result.getAccelero();
      }
      public Builder setAccelero(SensorsPacket.sensors_packet.SensorAcceleroPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccelero = true;
        result.accelero_ = value;
        return this;
      }
      public Builder setAccelero(SensorsPacket.sensors_packet.SensorAcceleroPayload.Builder builderForValue) {
        result.hasAccelero = true;
        result.accelero_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccelero(SensorsPacket.sensors_packet.SensorAcceleroPayload value) {
        if (result.hasAccelero() &&
                result.accelero_ != SensorsPacket.sensors_packet.SensorAcceleroPayload.getDefaultInstance()) {
          result.accelero_ =
                  SensorsPacket.sensors_packet.SensorAcceleroPayload.newBuilder(result.accelero_).mergeFrom(value).buildPartial();
        } else {
          result.accelero_ = value;
        }
        result.hasAccelero = true;
        return this;
      }
      public Builder clearAccelero() {
        result.hasAccelero = false;
        result.accelero_ = SensorsPacket.sensors_packet.SensorAcceleroPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorMagnetoPayload magneto = 2;
      public boolean hasMagneto() {
        return result.hasMagneto();
      }
      public SensorsPacket.sensors_packet.SensorMagnetoPayload getMagneto() {
        return result.getMagneto();
      }
      public Builder setMagneto(SensorsPacket.sensors_packet.SensorMagnetoPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMagneto = true;
        result.magneto_ = value;
        return this;
      }
      public Builder setMagneto(SensorsPacket.sensors_packet.SensorMagnetoPayload.Builder builderForValue) {
        result.hasMagneto = true;
        result.magneto_ = builderForValue.build();
        return this;
      }
      public Builder mergeMagneto(SensorsPacket.sensors_packet.SensorMagnetoPayload value) {
        if (result.hasMagneto() &&
                result.magneto_ != SensorsPacket.sensors_packet.SensorMagnetoPayload.getDefaultInstance()) {
          result.magneto_ =
                  SensorsPacket.sensors_packet.SensorMagnetoPayload.newBuilder(result.magneto_).mergeFrom(value).buildPartial();
        } else {
          result.magneto_ = value;
        }
        result.hasMagneto = true;
        return this;
      }
      public Builder clearMagneto() {
        result.hasMagneto = false;
        result.magneto_ = SensorsPacket.sensors_packet.SensorMagnetoPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorOrientationPayload orientation = 3;
      public boolean hasOrientation() {
        return result.hasOrientation();
      }
      public SensorsPacket.sensors_packet.SensorOrientationPayload getOrientation() {
        return result.getOrientation();
      }
      public Builder setOrientation(SensorsPacket.sensors_packet.SensorOrientationPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOrientation = true;
        result.orientation_ = value;
        return this;
      }
      public Builder setOrientation(SensorsPacket.sensors_packet.SensorOrientationPayload.Builder builderForValue) {
        result.hasOrientation = true;
        result.orientation_ = builderForValue.build();
        return this;
      }
      public Builder mergeOrientation(SensorsPacket.sensors_packet.SensorOrientationPayload value) {
        if (result.hasOrientation() &&
                result.orientation_ != SensorsPacket.sensors_packet.SensorOrientationPayload.getDefaultInstance()) {
          result.orientation_ =
                  SensorsPacket.sensors_packet.SensorOrientationPayload.newBuilder(result.orientation_).mergeFrom(value).buildPartial();
        } else {
          result.orientation_ = value;
        }
        result.hasOrientation = true;
        return this;
      }
      public Builder clearOrientation() {
        result.hasOrientation = false;
        result.orientation_ = SensorsPacket.sensors_packet.SensorOrientationPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorGyroPayload gyroscope = 4;
      public boolean hasGyroscope() {
        return result.hasGyroscope();
      }
      public SensorsPacket.sensors_packet.SensorGyroPayload getGyroscope() {
        return result.getGyroscope();
      }
      public Builder setGyroscope(SensorsPacket.sensors_packet.SensorGyroPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGyroscope = true;
        result.gyroscope_ = value;
        return this;
      }
      public Builder setGyroscope(SensorsPacket.sensors_packet.SensorGyroPayload.Builder builderForValue) {
        result.hasGyroscope = true;
        result.gyroscope_ = builderForValue.build();
        return this;
      }
      public Builder mergeGyroscope(SensorsPacket.sensors_packet.SensorGyroPayload value) {
        if (result.hasGyroscope() &&
                result.gyroscope_ != SensorsPacket.sensors_packet.SensorGyroPayload.getDefaultInstance()) {
          result.gyroscope_ =
                  SensorsPacket.sensors_packet.SensorGyroPayload.newBuilder(result.gyroscope_).mergeFrom(value).buildPartial();
        } else {
          result.gyroscope_ = value;
        }
        result.hasGyroscope = true;
        return this;
      }
      public Builder clearGyroscope() {
        result.hasGyroscope = false;
        result.gyroscope_ = SensorsPacket.sensors_packet.SensorGyroPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorGravityPayload gravity = 5;
      public boolean hasGravity() {
        return result.hasGravity();
      }
      public SensorsPacket.sensors_packet.SensorGravityPayload getGravity() {
        return result.getGravity();
      }
      public Builder setGravity(SensorsPacket.sensors_packet.SensorGravityPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGravity = true;
        result.gravity_ = value;
        return this;
      }
      public Builder setGravity(SensorsPacket.sensors_packet.SensorGravityPayload.Builder builderForValue) {
        result.hasGravity = true;
        result.gravity_ = builderForValue.build();
        return this;
      }
      public Builder mergeGravity(SensorsPacket.sensors_packet.SensorGravityPayload value) {
        if (result.hasGravity() &&
                result.gravity_ != SensorsPacket.sensors_packet.SensorGravityPayload.getDefaultInstance()) {
          result.gravity_ =
                  SensorsPacket.sensors_packet.SensorGravityPayload.newBuilder(result.gravity_).mergeFrom(value).buildPartial();
        } else {
          result.gravity_ = value;
        }
        result.hasGravity = true;
        return this;
      }
      public Builder clearGravity() {
        result.hasGravity = false;
        result.gravity_ = SensorsPacket.sensors_packet.SensorGravityPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorLinearAccPayload linear_acc = 6;
      public boolean hasLinearAcc() {
        return result.hasLinearAcc();
      }
      public SensorsPacket.sensors_packet.SensorLinearAccPayload getLinearAcc() {
        return result.getLinearAcc();
      }
      public Builder setLinearAcc(SensorsPacket.sensors_packet.SensorLinearAccPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLinearAcc = true;
        result.linearAcc_ = value;
        return this;
      }
      public Builder setLinearAcc(SensorsPacket.sensors_packet.SensorLinearAccPayload.Builder builderForValue) {
        result.hasLinearAcc = true;
        result.linearAcc_ = builderForValue.build();
        return this;
      }
      public Builder mergeLinearAcc(SensorsPacket.sensors_packet.SensorLinearAccPayload value) {
        if (result.hasLinearAcc() &&
                result.linearAcc_ != SensorsPacket.sensors_packet.SensorLinearAccPayload.getDefaultInstance()) {
          result.linearAcc_ =
                  SensorsPacket.sensors_packet.SensorLinearAccPayload.newBuilder(result.linearAcc_).mergeFrom(value).buildPartial();
        } else {
          result.linearAcc_ = value;
        }
        result.hasLinearAcc = true;
        return this;
      }
      public Builder clearLinearAcc() {
        result.hasLinearAcc = false;
        result.linearAcc_ = SensorsPacket.sensors_packet.SensorLinearAccPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorRotVectorPayload rotvector = 7;
      public boolean hasRotvector() {
        return result.hasRotvector();
      }
      public SensorsPacket.sensors_packet.SensorRotVectorPayload getRotvector() {
        return result.getRotvector();
      }
      public Builder setRotvector(SensorsPacket.sensors_packet.SensorRotVectorPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRotvector = true;
        result.rotvector_ = value;
        return this;
      }
      public Builder setRotvector(SensorsPacket.sensors_packet.SensorRotVectorPayload.Builder builderForValue) {
        result.hasRotvector = true;
        result.rotvector_ = builderForValue.build();
        return this;
      }
      public Builder mergeRotvector(SensorsPacket.sensors_packet.SensorRotVectorPayload value) {
        if (result.hasRotvector() &&
                result.rotvector_ != SensorsPacket.sensors_packet.SensorRotVectorPayload.getDefaultInstance()) {
          result.rotvector_ =
                  SensorsPacket.sensors_packet.SensorRotVectorPayload.newBuilder(result.rotvector_).mergeFrom(value).buildPartial();
        } else {
          result.rotvector_ = value;
        }
        result.hasRotvector = true;
        return this;
      }
      public Builder clearRotvector() {
        result.hasRotvector = false;
        result.rotvector_ = SensorsPacket.sensors_packet.SensorRotVectorPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorTemperaturePayload thermometer = 8;
      public boolean hasThermometer() {
        return result.hasThermometer();
      }
      public SensorsPacket.sensors_packet.SensorTemperaturePayload getThermometer() {
        return result.getThermometer();
      }
      public Builder setThermometer(SensorsPacket.sensors_packet.SensorTemperaturePayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasThermometer = true;
        result.thermometer_ = value;
        return this;
      }
      public Builder setThermometer(SensorsPacket.sensors_packet.SensorTemperaturePayload.Builder builderForValue) {
        result.hasThermometer = true;
        result.thermometer_ = builderForValue.build();
        return this;
      }
      public Builder mergeThermometer(SensorsPacket.sensors_packet.SensorTemperaturePayload value) {
        if (result.hasThermometer() &&
                result.thermometer_ != SensorsPacket.sensors_packet.SensorTemperaturePayload.getDefaultInstance()) {
          result.thermometer_ =
                  SensorsPacket.sensors_packet.SensorTemperaturePayload.newBuilder(result.thermometer_).mergeFrom(value).buildPartial();
        } else {
          result.thermometer_ = value;
        }
        result.hasThermometer = true;
        return this;
      }
      public Builder clearThermometer() {
        result.hasThermometer = false;
        result.thermometer_ = SensorsPacket.sensors_packet.SensorTemperaturePayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorProximityPayload proximity = 9;
      public boolean hasProximity() {
        return result.hasProximity();
      }
      public SensorsPacket.sensors_packet.SensorProximityPayload getProximity() {
        return result.getProximity();
      }
      public Builder setProximity(SensorsPacket.sensors_packet.SensorProximityPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasProximity = true;
        result.proximity_ = value;
        return this;
      }
      public Builder setProximity(SensorsPacket.sensors_packet.SensorProximityPayload.Builder builderForValue) {
        result.hasProximity = true;
        result.proximity_ = builderForValue.build();
        return this;
      }
      public Builder mergeProximity(SensorsPacket.sensors_packet.SensorProximityPayload value) {
        if (result.hasProximity() &&
                result.proximity_ != SensorsPacket.sensors_packet.SensorProximityPayload.getDefaultInstance()) {
          result.proximity_ =
                  SensorsPacket.sensors_packet.SensorProximityPayload.newBuilder(result.proximity_).mergeFrom(value).buildPartial();
        } else {
          result.proximity_ = value;
        }
        result.hasProximity = true;
        return this;
      }
      public Builder clearProximity() {
        result.hasProximity = false;
        result.proximity_ = SensorsPacket.sensors_packet.SensorProximityPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorLightPayload luxmeter = 10;
      public boolean hasLuxmeter() {
        return result.hasLuxmeter();
      }
      public SensorsPacket.sensors_packet.SensorLightPayload getLuxmeter() {
        return result.getLuxmeter();
      }
      public Builder setLuxmeter(SensorsPacket.sensors_packet.SensorLightPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLuxmeter = true;
        result.luxmeter_ = value;
        return this;
      }
      public Builder setLuxmeter(SensorsPacket.sensors_packet.SensorLightPayload.Builder builderForValue) {
        result.hasLuxmeter = true;
        result.luxmeter_ = builderForValue.build();
        return this;
      }
      public Builder mergeLuxmeter(SensorsPacket.sensors_packet.SensorLightPayload value) {
        if (result.hasLuxmeter() &&
                result.luxmeter_ != SensorsPacket.sensors_packet.SensorLightPayload.getDefaultInstance()) {
          result.luxmeter_ =
                  SensorsPacket.sensors_packet.SensorLightPayload.newBuilder(result.luxmeter_).mergeFrom(value).buildPartial();
        } else {
          result.luxmeter_ = value;
        }
        result.hasLuxmeter = true;
        return this;
      }
      public Builder clearLuxmeter() {
        result.hasLuxmeter = false;
        result.luxmeter_ = SensorsPacket.sensors_packet.SensorLightPayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorPressurePayload barometer = 11;
      public boolean hasBarometer() {
        return result.hasBarometer();
      }
      public SensorsPacket.sensors_packet.SensorPressurePayload getBarometer() {
        return result.getBarometer();
      }
      public Builder setBarometer(SensorsPacket.sensors_packet.SensorPressurePayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBarometer = true;
        result.barometer_ = value;
        return this;
      }
      public Builder setBarometer(SensorsPacket.sensors_packet.SensorPressurePayload.Builder builderForValue) {
        result.hasBarometer = true;
        result.barometer_ = builderForValue.build();
        return this;
      }
      public Builder mergeBarometer(SensorsPacket.sensors_packet.SensorPressurePayload value) {
        if (result.hasBarometer() &&
                result.barometer_ != SensorsPacket.sensors_packet.SensorPressurePayload.getDefaultInstance()) {
          result.barometer_ =
                  SensorsPacket.sensors_packet.SensorPressurePayload.newBuilder(result.barometer_).mergeFrom(value).buildPartial();
        } else {
          result.barometer_ = value;
        }
        result.hasBarometer = true;
        return this;
      }
      public Builder clearBarometer() {
        result.hasBarometer = false;
        result.barometer_ = SensorsPacket.sensors_packet.SensorPressurePayload.getDefaultInstance();
        return this;
      }

      // optional .sensors_packet.SensorRelativeHumidityPayload hygrometer = 12;
      public boolean hasHygrometer() {
        return result.hasHygrometer();
      }
      public SensorsPacket.sensors_packet.SensorRelativeHumidityPayload getHygrometer() {
        return result.getHygrometer();
      }
      public Builder setHygrometer(SensorsPacket.sensors_packet.SensorRelativeHumidityPayload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHygrometer = true;
        result.hygrometer_ = value;
        return this;
      }
      public Builder setHygrometer(SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.Builder builderForValue) {
        result.hasHygrometer = true;
        result.hygrometer_ = builderForValue.build();
        return this;
      }
      public Builder mergeHygrometer(SensorsPacket.sensors_packet.SensorRelativeHumidityPayload value) {
        if (result.hasHygrometer() &&
                result.hygrometer_ != SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.getDefaultInstance()) {
          result.hygrometer_ =
                  SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.newBuilder(result.hygrometer_).mergeFrom(value).buildPartial();
        } else {
          result.hygrometer_ = value;
        }
        result.hasHygrometer = true;
        return this;
      }
      public Builder clearHygrometer() {
        result.hasHygrometer = false;
        result.hygrometer_ = SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.getDefaultInstance();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sensors_packet)
    }

    static {
      defaultInstance = new sensors_packet(true);
      SensorsPacket.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sensors_packet)
  }

  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorAcceleroPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorAcceleroPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorMagnetoPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorMagnetoPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorOrientationPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorOrientationPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorGyroPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorGyroPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorGravityPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorGravityPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorLinearAccPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorLinearAccPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorRotVectorPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorRotVectorPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorTemperaturePayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorTemperaturePayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorProximityPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorProximityPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorLightPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorLightPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorPressurePayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorPressurePayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_sensors_packet_SensorRelativeHumidityPayload_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_sensors_packet_SensorRelativeHumidityPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\024sensors_packet.proto\"\347\n\n\016sensors_packe" +
                    "t\0227\n\010accelero\030\001 \001(\0132%.sensors_packet.Sen" +
                    "sorAcceleroPayload\0225\n\007magneto\030\002 \001(\0132$.se" +
                    "nsors_packet.SensorMagnetoPayload\022=\n\013ori" +
                    "entation\030\003 \001(\0132(.sensors_packet.SensorOr" +
                    "ientationPayload\0224\n\tgyroscope\030\004 \001(\0132!.se" +
                    "nsors_packet.SensorGyroPayload\0225\n\007gravit" +
                    "y\030\005 \001(\0132$.sensors_packet.SensorGravityPa" +
                    "yload\022:\n\nlinear_acc\030\006 \001(\0132&.sensors_pack" +
                    "et.SensorLinearAccPayload\0229\n\trotvector\030\007",
            " \001(\0132&.sensors_packet.SensorRotVectorPay" +
                    "load\022=\n\013thermometer\030\010 \001(\0132(.sensors_pack" +
                    "et.SensorTemperaturePayload\0229\n\tproximity" +
                    "\030\t \001(\0132&.sensors_packet.SensorProximityP" +
                    "ayload\0224\n\010luxmeter\030\n \001(\0132\".sensors_packe" +
                    "t.SensorLightPayload\0228\n\tbarometer\030\013 \001(\0132" +
                    "%.sensors_packet.SensorPressurePayload\022A" +
                    "\n\nhygrometer\030\014 \001(\0132-.sensors_packet.Sens" +
                    "orRelativeHumidityPayload\0328\n\025SensorAccel" +
                    "eroPayload\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 ",
            "\001(\001\0327\n\024SensorMagnetoPayload\022\t\n\001x\030\001 \001(\001\022\t" +
                    "\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\032H\n\030SensorOrientatio" +
                    "nPayload\022\017\n\007azimuth\030\001 \001(\001\022\r\n\005pitch\030\002 \001(\001" +
                    "\022\014\n\004roll\030\003 \001(\001\032A\n\021SensorGyroPayload\022\017\n\007a" +
                    "zimuth\030\001 \001(\001\022\r\n\005pitch\030\002 \001(\001\022\014\n\004roll\030\003 \001(" +
                    "\001\0327\n\024SensorGravityPayload\022\t\n\001x\030\001 \001(\001\022\t\n\001" +
                    "y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\0329\n\026SensorLinearAccPay" +
                    "load\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\0328\n" +
                    "\026SensorRotVectorPayload\022\014\n\004size\030\001 \001(\r\022\020\n" +
                    "\004data\030\002 \003(\001B\002\020\001\032/\n\030SensorTemperaturePayl",
            "oad\022\023\n\013temperature\030\001 \001(\001\032*\n\026SensorProxim" +
                    "ityPayload\022\020\n\010distance\030\001 \001(\001\032#\n\022SensorLi" +
                    "ghtPayload\022\r\n\005light\030\001 \001(\001\032)\n\025SensorPress" +
                    "urePayload\022\020\n\010pressure\030\001 \001(\001\032:\n\035SensorRe" +
                    "lativeHumidityPayload\022\031\n\021relative_humidi" +
                    "ty\030\001 \001(\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                internal_static_sensors_packet_descriptor =
                        getDescriptor().getMessageTypes().get(0);
                internal_static_sensors_packet_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_descriptor,
                        new java.lang.String[] { "Accelero", "Magneto", "Orientation", "Gyroscope", "Gravity", "LinearAcc", "Rotvector", "Thermometer", "Proximity", "Luxmeter", "Barometer", "Hygrometer", },
                        SensorsPacket.sensors_packet.class,
                        SensorsPacket.sensors_packet.Builder.class);
                internal_static_sensors_packet_SensorAcceleroPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(0);
                internal_static_sensors_packet_SensorAcceleroPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorAcceleroPayload_descriptor,
                        new java.lang.String[] { "X", "Y", "Z", },
                        SensorsPacket.sensors_packet.SensorAcceleroPayload.class,
                        SensorsPacket.sensors_packet.SensorAcceleroPayload.Builder.class);
                internal_static_sensors_packet_SensorMagnetoPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(1);
                internal_static_sensors_packet_SensorMagnetoPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorMagnetoPayload_descriptor,
                        new java.lang.String[] { "X", "Y", "Z", },
                        SensorsPacket.sensors_packet.SensorMagnetoPayload.class,
                        SensorsPacket.sensors_packet.SensorMagnetoPayload.Builder.class);
                internal_static_sensors_packet_SensorOrientationPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(2);
                internal_static_sensors_packet_SensorOrientationPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorOrientationPayload_descriptor,
                        new java.lang.String[] { "Azimuth", "Pitch", "Roll", },
                        SensorsPacket.sensors_packet.SensorOrientationPayload.class,
                        SensorsPacket.sensors_packet.SensorOrientationPayload.Builder.class);
                internal_static_sensors_packet_SensorGyroPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(3);
                internal_static_sensors_packet_SensorGyroPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorGyroPayload_descriptor,
                        new java.lang.String[] { "Azimuth", "Pitch", "Roll", },
                        SensorsPacket.sensors_packet.SensorGyroPayload.class,
                        SensorsPacket.sensors_packet.SensorGyroPayload.Builder.class);
                internal_static_sensors_packet_SensorGravityPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(4);
                internal_static_sensors_packet_SensorGravityPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorGravityPayload_descriptor,
                        new java.lang.String[] { "X", "Y", "Z", },
                        SensorsPacket.sensors_packet.SensorGravityPayload.class,
                        SensorsPacket.sensors_packet.SensorGravityPayload.Builder.class);
                internal_static_sensors_packet_SensorLinearAccPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(5);
                internal_static_sensors_packet_SensorLinearAccPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorLinearAccPayload_descriptor,
                        new java.lang.String[] { "X", "Y", "Z", },
                        SensorsPacket.sensors_packet.SensorLinearAccPayload.class,
                        SensorsPacket.sensors_packet.SensorLinearAccPayload.Builder.class);
                internal_static_sensors_packet_SensorRotVectorPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(6);
                internal_static_sensors_packet_SensorRotVectorPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorRotVectorPayload_descriptor,
                        new java.lang.String[] { "Size", "Data", },
                        SensorsPacket.sensors_packet.SensorRotVectorPayload.class,
                        SensorsPacket.sensors_packet.SensorRotVectorPayload.Builder.class);
                internal_static_sensors_packet_SensorTemperaturePayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(7);
                internal_static_sensors_packet_SensorTemperaturePayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorTemperaturePayload_descriptor,
                        new java.lang.String[] { "Temperature", },
                        SensorsPacket.sensors_packet.SensorTemperaturePayload.class,
                        SensorsPacket.sensors_packet.SensorTemperaturePayload.Builder.class);
                internal_static_sensors_packet_SensorProximityPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(8);
                internal_static_sensors_packet_SensorProximityPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorProximityPayload_descriptor,
                        new java.lang.String[] { "Distance", },
                        SensorsPacket.sensors_packet.SensorProximityPayload.class,
                        SensorsPacket.sensors_packet.SensorProximityPayload.Builder.class);
                internal_static_sensors_packet_SensorLightPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(9);
                internal_static_sensors_packet_SensorLightPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorLightPayload_descriptor,
                        new java.lang.String[] { "Light", },
                        SensorsPacket.sensors_packet.SensorLightPayload.class,
                        SensorsPacket.sensors_packet.SensorLightPayload.Builder.class);
                internal_static_sensors_packet_SensorPressurePayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(10);
                internal_static_sensors_packet_SensorPressurePayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorPressurePayload_descriptor,
                        new java.lang.String[] { "Pressure", },
                        SensorsPacket.sensors_packet.SensorPressurePayload.class,
                        SensorsPacket.sensors_packet.SensorPressurePayload.Builder.class);
                internal_static_sensors_packet_SensorRelativeHumidityPayload_descriptor =
                        internal_static_sensors_packet_descriptor.getNestedTypes().get(11);
                internal_static_sensors_packet_SensorRelativeHumidityPayload_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_sensors_packet_SensorRelativeHumidityPayload_descriptor,
                        new java.lang.String[] { "RelativeHumidity", },
                        SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.class,
                        SensorsPacket.sensors_packet.SensorRelativeHumidityPayload.Builder.class);
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
  }

  public static void internalForceInit() {}

  // @@protoc_insertion_point(outer_class_scope)
}